# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
import smart_selects.db_fields
import datetime
import django.contrib.auth.models
import jobportal.models
import django.utils.timezone
from django.conf import settings
import django.core.validators


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0006_require_contenttypes_0002'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(null=True, verbose_name='last login', blank=True)),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, max_length=30, validators=[django.core.validators.RegexValidator('^[\\w.@+-]+$', 'Enter a valid username. This value may contain only letters, numbers and @/./+/-/_ characters.', 'invalid')], help_text='Required. 30 characters or fewer. Letters, digits and @/./+/-/_ only.', unique=True, verbose_name='username')),
                ('first_name', models.CharField(max_length=30, verbose_name='first name', blank=True)),
                ('last_name', models.CharField(max_length=30, verbose_name='last name', blank=True)),
                ('email', models.EmailField(max_length=254, verbose_name='email address', blank=True)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(default=b'admin', max_length=20, choices=[(b'student', b'student'), (b'alumni', b'alumni'), (b'admin', b'admin'), (b'company', b'company')])),
                ('groups', models.ManyToManyField(related_query_name='user', related_name='user_set', to='auth.Group', blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(related_query_name='user', related_name='user_set', to='auth.Permission', blank=True, help_text='Specific permissions for this user.', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('admin_username', models.CharField(max_length=50, null=True, verbose_name=b'Admin Name', blank=True)),
                ('position', models.CharField(max_length=60, null=True, blank=True)),
                ('user', models.OneToOneField(null=True, blank=True, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'managed': True,
                'verbose_name_plural': 'Admins',
            },
        ),
        migrations.CreateModel(
            name='Alumni',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('iitg_webmail', models.CharField(max_length=50, verbose_name=b'IITG Webmail', blank=True)),
                ('alternate_email', models.EmailField(max_length=254, verbose_name=b'Alternate Email', blank=True)),
                ('cv', models.FileField(null=True, upload_to=jobportal.models.generate_alum_cvname, blank=True)),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Avatar',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('avatar', models.ImageField(null=True, upload_to=jobportal.models.get_avatar_name, blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('password_copy', models.CharField(default=b'password', max_length=30, null=True, blank=True)),
                ('company_name', models.CharField(max_length=30, null=True, verbose_name=b'Company', blank=True)),
                ('description', models.TextField(null=True, verbose_name=b'Brief Writeup on organization', blank=True)),
                ('postal_address', models.TextField(null=True, verbose_name=b'Postal Address', blank=True)),
                ('website', models.CharField(default=b'www.example.com', max_length=100)),
                ('organization_type', models.CharField(default=b'PSU', max_length=20, verbose_name=b'Type of Organization', blank=True, choices=[(b'Private', b'Private'), (b'Government', b'Government'), (b'PSU', b'PSU'), (b'MNC(Indian Origin)', b'MNC(Indian Origin)'), (b'MNC(Foreign Origin)', b'MNC(Foreign Origin)'), (b'NGO', b'NGO'), (b'Other', b'Other')])),
                ('industry_sector', models.CharField(default=b'IT', max_length=25, verbose_name=b'Industry Sector', blank=True, choices=[(b'Core Engg', b'Core Engg'), (b'IT', b'IT'), (b'Analytics', b'Analytics'), (b'Management', b'Management'), (b'Finance', b'Finance'), (b'Education', b'Education'), (b'Consulting', b'Consulting'), (b'R&D', b'R&D'), (b'Oil and Gas', b'Oil and Gas'), (b'Ecommerce', b'Ecommerce'), (b'FMCG', b'FMCG'), (b'Manufacturing', b'Manufacturing'), (b'Telecom', b'Telecom'), (b'Other', b'Other')])),
                ('head_hr_name', models.CharField(default=b'Mr. Head HR', max_length=20, blank=True)),
                ('head_hr_email', models.CharField(default=b'headhr@xyz.com', max_length=60, blank=True)),
                ('head_hr_designation', models.CharField(default=b'Head HR', max_length=30, blank=True)),
                ('head_hr_mobile', models.CharField(default=b'0123456789', max_length=12, blank=True)),
                ('head_hr_fax', models.CharField(default=b'0123456', max_length=15, blank=True)),
                ('first_hr_name', models.CharField(default=b'Mr. First HR', max_length=20, blank=True)),
                ('first_hr_email', models.CharField(default=b'firsthr@xyz.com', max_length=60, blank=True)),
                ('first_hr_designation', models.CharField(default=b'First HR', max_length=30, blank=True)),
                ('first_hr_mobile', models.CharField(default=b'0123456789', max_length=12, blank=True)),
                ('first_hr_fax', models.CharField(default=b'0123456', max_length=15, blank=True)),
                ('approved', models.BooleanField(default=False)),
                ('user', models.OneToOneField(null=True, blank=True, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CompanyReg',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('company_name_reg', models.CharField(max_length=30, null=True, verbose_name=b'Company', blank=True)),
                ('description_reg', models.TextField(null=True, verbose_name=b'Brief Writeup on organization', blank=True)),
                ('postal_address_reg', models.TextField(null=True, verbose_name=b'Postal Address', blank=True)),
                ('website_reg', models.CharField(default=b'www.example.com', max_length=100)),
                ('organization_type_reg', models.CharField(default=b'PSU', max_length=20, verbose_name=b'Type of Organization', blank=True, choices=[(b'Private', b'Private'), (b'Government', b'Government'), (b'PSU', b'PSU'), (b'MNC(Indian Origin)', b'MNC(Indian Origin)'), (b'MNC(Foreign Origin)', b'MNC(Foreign Origin)'), (b'NGO', b'NGO'), (b'Other', b'Other')])),
                ('industry_sector_reg', models.CharField(default=b'IT', max_length=25, verbose_name=b'Industry Sector', blank=True, choices=[(b'Core Engg', b'Core Engg'), (b'IT', b'IT'), (b'Analytics', b'Analytics'), (b'Management', b'Management'), (b'Finance', b'Finance'), (b'Education', b'Education'), (b'Consulting', b'Consulting'), (b'R&D', b'R&D'), (b'Oil and Gas', b'Oil and Gas'), (b'Ecommerce', b'Ecommerce'), (b'FMCG', b'FMCG'), (b'Manufacturing', b'Manufacturing'), (b'Telecom', b'Telecom'), (b'Other', b'Other')])),
                ('head_hr_name_reg', models.CharField(default=b'Mr. Head HR', max_length=20, blank=True)),
                ('head_hr_email_reg', models.CharField(default=b'headhr@xyz.com', max_length=60, blank=True)),
                ('head_hr_designation_reg', models.CharField(default=b'Head HR', max_length=30, blank=True)),
                ('head_hr_mobile_reg', models.CharField(default=b'0123456789', max_length=12, blank=True)),
                ('head_hr_fax_reg', models.CharField(default=b'0123456', max_length=15, blank=True)),
                ('first_hr_name_reg', models.CharField(default=b'Mr. First HR', max_length=20, blank=True)),
                ('first_hr_email_reg', models.CharField(default=b'firsthr@xyz.com', max_length=60, blank=True)),
                ('first_hr_designation_reg', models.CharField(default=b'First HR', max_length=30, blank=True)),
                ('first_hr_mobile_reg', models.CharField(default=b'0123456789', max_length=12, blank=True)),
                ('first_hr_fax_reg', models.CharField(default=b'0123456', max_length=15, blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='CV',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('cv1', models.FileField(null=True, upload_to=jobportal.models.get_cv1_name, blank=True)),
                ('cv2', models.FileField(null=True, upload_to=jobportal.models.get_cv1_name, blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('dept', models.CharField(max_length=40)),
                ('dept_code', models.CharField(max_length=4)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('title', models.CharField(max_length=30, null=True)),
                ('date1', models.DateField()),
                ('date2', models.DateField()),
                ('date3', models.DateField()),
                ('final_date', models.DateField(null=True, blank=True)),
                ('finalised', models.BooleanField(default=False)),
                ('alum_owner', models.ForeignKey(blank=True, to='jobportal.Alumni', null=True)),
                ('company_owner', models.ForeignKey(blank=True, to='jobportal.Company', null=True)),
            ],
            options={
                'managed': True,
                'verbose_name_plural': 'Events',
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('posted_by_alumnus', models.NullBooleanField(default=None, verbose_name=b'Posted by Alum')),
                ('posted_by_company', models.NullBooleanField(default=None, verbose_name=b'Posted by Company')),
                ('description', models.TextField(null=True, verbose_name=b'Job Description', blank=True)),
                ('designation', models.CharField(max_length=50, null=True, verbose_name=b'Job Title/Designation', blank=True)),
                ('cpi_shortlist', models.BooleanField(default=False)),
                ('minimum_cpi', models.DecimalField(default=4.0, max_digits=4, decimal_places=2, blank=True)),
                ('percentage_x', models.DecimalField(default=70.0, null=True, max_digits=5, decimal_places=2)),
                ('percentage_xii', models.DecimalField(default=70.0, null=True, max_digits=5, decimal_places=2)),
                ('num_openings', models.DecimalField(default=10, null=True, max_digits=3, decimal_places=0)),
                ('other_requirements', models.TextField(default=b'', max_length=100, null=True)),
                ('currency', models.CharField(default=b'INR', max_length=15, null=True)),
                ('ctc_btech', models.DecimalField(default=0.0, null=True, max_digits=12, decimal_places=2)),
                ('ctc_mtech', models.DecimalField(default=0.0, null=True, max_digits=12, decimal_places=2)),
                ('ctc_msc', models.DecimalField(default=0.0, null=True, max_digits=12, decimal_places=2)),
                ('ctc_ma', models.DecimalField(default=0.0, null=True, max_digits=12, decimal_places=2)),
                ('ctc_phd', models.DecimalField(default=0.0, null=True, max_digits=12, decimal_places=2)),
                ('gross_btech', models.DecimalField(default=0.0, null=True, max_digits=12, decimal_places=2)),
                ('gross_mtech', models.DecimalField(default=0.0, null=True, max_digits=12, decimal_places=2)),
                ('gross_msc', models.DecimalField(default=0.0, null=True, max_digits=12, decimal_places=2)),
                ('gross_ma', models.DecimalField(default=0.0, null=True, max_digits=12, decimal_places=2)),
                ('gross_phd', models.DecimalField(default=0.0, null=True, max_digits=12, decimal_places=2)),
                ('take_home_during_training', models.DecimalField(default=0.0, null=True, max_digits=12, decimal_places=2)),
                ('take_home_after_training', models.DecimalField(default=0.0, null=True, max_digits=12, decimal_places=2)),
                ('bonus', models.DecimalField(default=0.0, null=True, verbose_name=b'Bonus/Perks/Incentives', max_digits=12, decimal_places=2)),
                ('bond', models.NullBooleanField(default=None)),
                ('bond_details', models.TextField(max_length=200, null=True, blank=True)),
                ('bond_link', models.URLField(null=True, blank=True)),
                ('profile_name', models.CharField(max_length=15, null=True)),
                ('posted_on', models.DateTimeField(default=datetime.datetime.now, null=True, blank=True)),
                ('approved', models.NullBooleanField(default=None)),
                ('approved_on', models.DateField(null=True, blank=True)),
                ('sent_back', models.BooleanField(default=False)),
                ('last_updated', models.DateTimeField(null=True, blank=True)),
                ('opening_date', models.DateField(default=datetime.date(2017, 1, 1), null=True, blank=True)),
                ('application_deadline', models.DateField(default=datetime.date(2017, 1, 1), null=True, blank=True)),
                ('alum_owner', models.ForeignKey(related_name='owner', blank=True, to='jobportal.Alumni', null=True)),
                ('company_owner', models.ForeignKey(blank=True, to='jobportal.Company', null=True)),
            ],
            options={
                'managed': True,
                'verbose_name_plural': 'Jobs',
            },
        ),
        migrations.CreateModel(
            name='Programme',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=10, choices=[(b'BTECH', b'B.Tech.'), (b'MTECH', b'M.Tech.'), (b'PHD', b'Ph.D.')])),
                ('minor_status', models.BooleanField(default=False)),
                ('dept', smart_selects.db_fields.ChainedForeignKey(chained_model_field=b'year', to='jobportal.Department', chained_field=b'year')),
            ],
        ),
        migrations.CreateModel(
            name='ProgrammeJobRelation',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('dept', smart_selects.db_fields.ChainedForeignKey(chained_model_field=b'year', to='jobportal.Department', chained_field=b'year', null=True)),
                ('job', models.ForeignKey(to='jobportal.Job')),
                ('prog', smart_selects.db_fields.ChainedForeignKey(chained_model_field=b'dept', to='jobportal.Programme', chained_field=b'dept', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Signature',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('signature', models.ImageField(null=True, upload_to=jobportal.models.get_sign_name, blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('roll_no', models.DecimalField(default=0, unique=True, verbose_name=b'Roll No', max_digits=10, decimal_places=0)),
                ('first_name', models.CharField(default=b'', max_length=20, blank=True)),
                ('middle_name', models.CharField(default=b'', max_length=20, blank=True)),
                ('last_name', models.CharField(default=b'', max_length=20, blank=True)),
                ('dob', models.DateField(default=django.utils.timezone.now, blank=True)),
                ('sex', models.CharField(default=b'M', max_length=1, choices=[(b'M', b'Male'), (b'F', b'Female')])),
                ('category', models.CharField(default=b'GEN', max_length=10, choices=[(b'GEN', b'GEN'), (b'OBC', b'OBC'), (b'SC', b'SC'), (b'ST', b'ST'), (b'PH', b'PH'), (b'Foreign', b'Foreign')])),
                ('nationality', models.CharField(default=b'INDIAN', max_length=15, blank=True)),
                ('jee_air_rank', models.DecimalField(default=0, max_digits=6, decimal_places=0)),
                ('hostel', models.CharField(default=b'', max_length=25, blank=True, choices=[(b'Barak', b'Barak'), (b'Brahmaputra', b'Brahmaputra'), (b'Dhansiri', b'Dhansiri'), (b'Dibang', b'Dibang'), (b'Dihing', b'Dihing'), (b'Kameng', b'Kameng'), (b'Kapili', b'Kapili'), (b'Lohit', b'Lohit'), (b'Manas', b'Manas'), (b'Married Scholars Hostel', b'Married Scholars Hostel'), (b'Siang', b'Siang'), (b'Subansiri', b'Subansiri'), (b'Umiam', b'Umiam'), (b'Other', b'Other')])),
                ('room_no', models.CharField(default=b'', max_length=6, blank=True)),
                ('iitg_webmail', models.CharField(default=b'', unique=True, max_length=50, verbose_name=b'IITG Webmail')),
                ('alternative_email', models.CharField(max_length=50, null=True, verbose_name=b'Alternative Email', blank=True)),
                ('mobile_campus', models.CharField(max_length=16, blank=True)),
                ('mobile_campus_alternative', models.CharField(max_length=16, blank=True)),
                ('mobile_home', models.CharField(max_length=16, blank=True)),
                ('address_line1', models.CharField(default=b'', max_length=50, blank=True)),
                ('address_line2', models.CharField(default=b'', max_length=50, blank=True)),
                ('address_line3', models.CharField(default=b'', max_length=50, blank=True)),
                ('pin_code', models.DecimalField(default=781039, max_digits=10, decimal_places=0)),
                ('percentage_x', models.DecimalField(null=True, max_digits=5, decimal_places=2, blank=True)),
                ('percentage_xii', models.DecimalField(null=True, max_digits=5, decimal_places=2, blank=True)),
                ('board_x', models.CharField(default=b'CBSE', max_length=30, null=True, blank=True)),
                ('board_xii', models.CharField(default=b'CBSE', max_length=30, null=True, blank=True)),
                ('medium_x', models.CharField(default=b'English', max_length=30, null=True, blank=True)),
                ('medium_xii', models.CharField(default=b'English', max_length=30, null=True, blank=True)),
                ('passing_year_x', models.DecimalField(default=2003, max_digits=4, decimal_places=0, blank=True)),
                ('passing_year_xii', models.DecimalField(default=2003, max_digits=4, decimal_places=0, blank=True)),
                ('gap_in_study', models.BooleanField(default=False)),
                ('gap_reason', models.TextField(default=b'', max_length=100, null=True, blank=True)),
                ('linkedin_link', models.URLField(max_length=254, null=True, blank=True)),
                ('placed', models.BooleanField(default=False)),
                ('intern2', models.BooleanField(default=False)),
                ('intern3', models.BooleanField(default=False)),
                ('company_count', models.DecimalField(default=0, null=True, max_digits=30, decimal_places=0, blank=True)),
                ('ppo', models.BooleanField(default=False, verbose_name=b'PPO')),
                ('cpi', models.DecimalField(default=0.0, null=True, max_digits=4, decimal_places=2, blank=True)),
                ('spi_1_sem', models.DecimalField(default=0.0, null=True, max_digits=4, decimal_places=2, blank=True)),
                ('spi_2_sem', models.DecimalField(default=0.0, null=True, max_digits=4, decimal_places=2, blank=True)),
                ('spi_3_sem', models.DecimalField(default=0.0, null=True, max_digits=4, decimal_places=2, blank=True)),
                ('spi_4_sem', models.DecimalField(default=0.0, null=True, max_digits=4, decimal_places=2, blank=True)),
                ('spi_5_sem', models.DecimalField(default=0.0, null=True, max_digits=4, decimal_places=2, blank=True)),
                ('spi_6_sem', models.DecimalField(default=0.0, null=True, max_digits=4, decimal_places=2, blank=True)),
                ('dept', smart_selects.db_fields.ChainedForeignKey(chained_model_field=b'year', to='jobportal.Department', chained_field=b'year')),
                ('minor_programme', models.ForeignKey(related_name='minor', blank=True, to='jobportal.Department', null=True)),
                ('prog', smart_selects.db_fields.ChainedForeignKey(chained_model_field=b'dept', to='jobportal.Programme', chained_field=b'dept')),
                ('user', models.OneToOneField(null=True, blank=True, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'managed': True,
                'verbose_name_plural': 'Students',
            },
        ),
        migrations.CreateModel(
            name='StudentJobRelation',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('round', models.IntegerField(default=1)),
                ('placed_init', models.BooleanField(default=False)),
                ('shortlist_init', models.BooleanField(default=False)),
                ('shortlist_approved', models.NullBooleanField(default=None)),
                ('placed_approved', models.NullBooleanField(default=None)),
                ('dropped', models.BooleanField(default=False)),
                ('cv1', models.BooleanField(default=False)),
                ('cv2', models.BooleanField(default=False)),
                ('job', models.ForeignKey(blank=True, to='jobportal.Job', null=True)),
                ('stud', models.ForeignKey(blank=True, to='jobportal.Student', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Year',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('current_year', models.DecimalField(unique=True, null=True, max_digits=4, decimal_places=0)),
                ('remark', models.CharField(max_length=30, null=True, blank=True)),
            ],
        ),
        migrations.AddField(
            model_name='student',
            name='year',
            field=models.ForeignKey(to='jobportal.Year', null=True),
        ),
        migrations.AddField(
            model_name='signature',
            name='stud',
            field=models.ForeignKey(blank=True, to='jobportal.Student', null=True),
        ),
        migrations.AddField(
            model_name='programmejobrelation',
            name='year',
            field=models.ForeignKey(to='jobportal.Year', null=True),
        ),
        migrations.AddField(
            model_name='programme',
            name='year',
            field=models.ForeignKey(to='jobportal.Year'),
        ),
        migrations.AddField(
            model_name='department',
            name='year',
            field=models.ForeignKey(to='jobportal.Year'),
        ),
        migrations.AddField(
            model_name='cv',
            name='stud',
            field=models.ForeignKey(blank=True, to='jobportal.Student', null=True),
        ),
        migrations.AddField(
            model_name='avatar',
            name='stud',
            field=models.ForeignKey(blank=True, to='jobportal.Student', null=True),
        ),
        migrations.AddField(
            model_name='alumni',
            name='dept',
            field=smart_selects.db_fields.ChainedForeignKey(chained_model_field=b'year', to='jobportal.Department', chained_field=b'year'),
        ),
        migrations.AddField(
            model_name='alumni',
            name='prog',
            field=smart_selects.db_fields.ChainedForeignKey(chained_model_field=b'dept', to='jobportal.Programme', chained_field=b'dept'),
        ),
        migrations.AddField(
            model_name='alumni',
            name='user',
            field=models.OneToOneField(null=True, blank=True, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='alumni',
            name='year',
            field=models.ForeignKey(to='jobportal.Year', null=True),
        ),
        migrations.AddField(
            model_name='alumni',
            name='year_passing',
            field=models.ForeignKey(related_name='year_passing', to='jobportal.Year', null=True),
        ),
        migrations.AlterUniqueTogether(
            name='programme',
            unique_together=set([('year', 'dept', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='department',
            unique_together=set([('dept_code', 'year')]),
        ),
    ]
